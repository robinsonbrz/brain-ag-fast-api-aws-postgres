name: CI Lambda

on:
  push:
    branches: [ "main" ]

jobs:
  test:
    name: Run tests with PostgreSQL
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgresql://postgres:password@db:5432/postgres

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h db -p 5432; do
            echo "Waiting for PostgreSQL..."
            sleep 1
          done

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

      - name: Run tests
        run: python -m pytest -x
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}

  terraform-apply:
    name: 'Terraform Deploy'
    runs-on: ubuntu-latest
    environment: production
    needs: test

    defaults:
      run:
        shell: bash
        working-directory: ./infra-lambda

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt

      - name: Terraform Plan
        env:
          TF_LOG: DEBUG
        run: terraform plan -no-color -input=false -var="database_url=${{ secrets.DATABASE_URL }}"

      - name: Terraform Apply
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          terraform init
          terraform apply -auto-approve -var="database_url=$DATABASE_URL"




# name: CI Lambda

# on:
#   push:
#     branches: [ "main" ]

# jobs:
#   terraform-apply:

#     name: 'Terraform'
#     runs-on: ubuntu-latest
#     environment: production

#     defaults:
#       run:
#         shell: bash
#         working-directory: ./infra-lambda

#     steps:
#     - name: Checkout
#       uses: actions/checkout@v4

#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v2

#     - name: Configure AWS Credentials
#       uses: aws-actions/configure-aws-credentials@v4
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: us-east-1

#     - name: Terraform Init
#       run: terraform init

#     - name: Terraform Format
#       run: terraform fmt

#     - name: Terraform Plan
#       env:
#         TF_LOG: DEBUG
#       run: terraform plan -no-color -input=false -var="database_url=${{ secrets.DATABASE_URL }}"



#     - name: Terraform Apply
#       env:
#         DATABASE_URL: ${{ secrets.DATABASE_URL }}
#       run: |
#         terraform init
#         terraform apply -auto-approve -var="database_url=$DATABASE_URL"